#!/bin/bash

trap "exit 130" SIGINT
trap "exit 137" SIGKILL
trap "exit 143" SIGTERM

set -o errexit
set -o nounset
set -o pipefail

WORDPOT_JSON="/etc/wordpot/wordpot.json"


register () {
  local deploy_key="${1:-}"
  local chnserver="${2:-localhost}"
  local json="${3:-wordpot}"
  local hostname="$(hostname -f)"
  local honeypot="wordpot"

  if [[ -z ${deploy_key} ]]
  then
    return 1
  fi

  curl --verbose \
       --silent \
       --request POST \
       --header "Content-Type: application/json" \
       --output ${json} \
       --data "{
    \"name\": \"${hostname}-${honeypot}\",
    \"hostname\": \"$hostname\",
    \"deploy_key\": \"$deploy_key\",
    \"honeypot\": \"$honeypot\"
  }" ${chnserver}/api/sensor/
}


setup_wordpot_conf () {
    local server=${1:-}
    local server_port=${2:-}
    local uid=${3:-}
    local secret=${4:-}
    local wp_port=${5:-8080}

    pushd /opt/wordpot
    cp wordpot.conf wordpot.conf.bak

    perl -i -ne 'print unless /HPFEEDS_.*/' wordpot.conf
    perl -i -pe "s/^HOST\s.*/HOST = '0.0.0.0'/" wordpot.conf
    perl -i -pe "s/^PORT\s.*/PORT = ${wp_port}/" wordpot.conf

    echo -e "\nHPFEEDS_ENABLED = True" >> wordpot.conf
    echo -e "HPFEEDS_HOST = '${server}'" >> wordpot.conf
    echo -e "HPFEEDS_PORT = ${server_port}" >> wordpot.conf
    echo -e "HPFEEDS_IDENT = '${uid}'" >> wordpot.conf
    echo -e "HPFEEDS_SECRET = '${secret}'" >> wordpot.conf
    echo -e "HPFEEDS_TOPIC = 'wordpot.events'" >> wordpot.conf

    popd
}


main () {
    source {{ sysconfig_dir }}/wordpot

    if [[ ${DEBUG} == "true" ]]
    then
        set -o xtrace
    fi

    local deploy_key=${DEPLOY_KEY:-}
    local chn_server=${CHN_SERVER}
    local feeds_server=${FEEDS_SERVER:-localhost}
    local feeds_server_port=${FEEDS_SERVER_PORT:-10000}
    local wp_port=${WORDPRESS_PORT:-8080}
    local json=${WORDPOT_JSON:-wordpot.json}

    local debug=${DEBUG:-false}

    if [[ -z ${deploy_key} ]]
    then
        echo "[CRIT] - No deploy key found"
        exit 1
    fi

    # If it doesn't exist or is empty
    if [[ ! -f ${json} ]] || [[ ! -s ${json} ]]
    then
        register ${deploy_key} ${chn_server} ${json}

        return=$?

        if [[ $return -ne 0 ]]
        then
            echo "Failed to register with ${chn_server} using key: ${deploy_key}"
            exit 1
        fi
    fi

    local uuid=$(python -c "import json;obj=json.load(file('${json}'));print obj['uuid']")

    if [ -z "$uuid" ]
    then
        echo "Could not create sensor using name \"$(hostname -f)\"."
        exit 1
    else
        echo "Created sensor: " $uuid
    fi

    local feeds_server=$(echo $feeds_server | sed 's#^http://##; s#^https://##; s#/.*$##; s/:.*$//')
    local uid=$(python -c "import json;obj=json.load(file('${json}'));print obj['identifier']")
    local secret=$(python -c "import json;obj=json.load(file('${json}'));print obj['secret']")

    setup_wordpot_conf ${feeds_server} \
                       ${feeds_server_port} \
                       ${uid} ${secret} \
                       ${wp_port}
    exec su - wordpot -c "/opt/wordpot/wordpot-env/bin/python /opt/wordpot/wordpot.py"
}

main "$@"
